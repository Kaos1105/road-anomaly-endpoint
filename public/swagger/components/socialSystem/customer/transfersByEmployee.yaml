get:
  tags:
    - Customers
  summary: List transfers by employee.
  description: Get transfers by employee
  parameters:
    - name: employee
      description: employee ID
      in: path
      required: true
      type: integer
    - in: query
      name: filter[major_history_flg]
      type: integer
      enum: [ 1, 2 ]
      description: >
        Filter by major history flag
          * `1` - NOT_SPECIFIED
          * `2` - MAJOR_PERSONAL_CHANGES
    - in: query
      name: sort
      schema:
        type: string
      description: >
        Sort order:
         * `-sortKey` - Ascending, from A to Z
         * `sortKey` - Descending, from Z to A
         * List sortKey: start_date, company, site, department, division, position, updated_at.
  responses:
    200:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": [
              {
                "id": 70,
                "start_date": null,
                "end_date": null,
                "position": null,
                "major_history_flg": 2,
                "updated_at": "2024/09/11",
                "company": {
                  "id": 65,
                  "code": "test",
                  "long_name": "Shinnichiro VN",
                  "previous_name": "SH System",
                  "previous_name_flg": 2,
                  "use_classification": 2
                },
                "site": null,
                "department": null,
                "division": null
              }
            ],
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "アクセスが拒否されました",
            "errors": null
          }
