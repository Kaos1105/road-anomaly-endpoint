get:
  tags:
    - Supplier
  summary: Show all products of the supplier
  description: Show all products of a supplier
  parameters:
    - in: path
      name: supplier
      type: integer
      required: true
      description: Numeric ID of the Supplier to get.
    - in: query
      name: sort
      schema:
        type: string
      description: >
        Sort order:
         * `-sortKey` - Ascending, from A to Z
         * `sortKey` - Descending, from Z to A
         * List sortKey: code, name, unit_price, display_order, updated_at.
  responses:
    200:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": [
              {
                "id": 9,
                "product_classification": 2,
                "code": "code",
                "name": "me",
                "unit_price": 120,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/03"
              },
              {
                "id": 8,
                "product_classification": 2,
                "code": "code",
                "name": "me",
                "unit_price": 120,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 7,
                "product_classification": 2,
                "code": "code",
                "name": "name",
                "unit_price": 120,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 6,
                "product_classification": 1,
                "code": "code",
                "name": "name",
                "unit_price": 120,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 5,
                "product_classification": 1,
                "code": "code",
                "name": "name",
                "unit_price": 100.2,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 4,
                "product_classification": 1,
                "code": "code",
                "name": "name",
                "unit_price": 1000.2,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 3,
                "product_classification": 1,
                "code": "code",
                "name": "name",
                "unit_price": 1000.2,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              },
              {
                "id": 1,
                "product_classification": 1,
                "code": "PO1",
                "name": "BÃ¡nh",
                "unit_price": 2000,
                "tax_classification_1": 1,
                "tax_classification_2": 2,
                "tax_classification_3": 3,
                "display_order": 1,
                "use_classification": 2,
                "updated_at": "2024/10/02"
              }
            ],
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "Unauthorized.",
            "errors": null
          }
    404:
      description: Page Not Found
      schema:
        type: object
        example:
          {
            "code": 404,
            "data": null,
            "message": "The page could not be found.",
            "errors": "No query results for model [App\\Models\\Supplier] 1"
          }

