# create multiple social data for un-registered customer
put:
  tags:
    - Social Data
  summary: Update Social Data workflow in No.37040.
  description: Update Social Data workflow in No.37040.
  consumes:
    - application/x-www-form-urlencoded
  produces:
    - text/html; charset=utf-8
  parameters:
    - name: social_data
      description: Social Data Id
      in: path
      required: true
      type: integer
    - in: body
      name: body
      description: JSON payload for updating Social Data
      required: true
      schema:
        type: object
        properties:
          data_progress:
            type: integer
            description: Data progress of Social data
          execution_type:
            type: integer
            description: Execution type of data progress
            enum: [ 1, 2, 3, 4 ]
          comment:
            type: string
            format: float
            description: Workflow comment
        required:
          - data_progress
          - execution_type
  responses:
    201:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": {
              "id": 9,
              "social_event_id": 1,
              "customer_id": 6,
              "display_transfer_id": 102,
              "product_id": 1,
              "product_name": "Sample Product",
              "unit_price": 100,
              "discount": 10,
              "tax_classification_1": 1,
              "tax_1": 5,
              "shipping_cost": 15,
              "tax_classification_2": 2,
              "tax_2": 3,
              "other": 2,
              "tax_classification_3": 3,
              "tax_3": 1,
              "total_amount": 120,
              "total_tax": 9,
              "purpose": "Sample Purpose",
              "result": "Sample Result",
              "processing_site": 1,
              "accounting_company": 1,
              "accounting_department_id": 132,
              "address_classification": 1,
              "data_progress": 0,
              "comment_history": "comment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、準備しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、準備しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、準備しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、準備しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、差戻しました。\ncomment\n2024/10/16 Danh　Nguyenさんが、準備しました。\n",
              "memo": "Sample Memo",
              "display_order": 1,
              "use_classification": 2
            },
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "アクセスが拒否されました",
            "errors": null
          }
    422:
      description: Unprocessable Content
      schema:
        type: object
        example:
          {
            "code": 422,
            "data": null,
            "message": "バリデーションエラーがあります。",
            "errors": [
              {
                "field": "data_progress",
                "message": [
                  "仕入先名無効な値です。"
                ]
              }
            ]
          }
