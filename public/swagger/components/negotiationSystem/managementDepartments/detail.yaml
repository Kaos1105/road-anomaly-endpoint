get:
  tags:
    - Management Departments
  summary: Show a management department.
  description: Show detail management department
  parameters:
    - in: path
      name: management_department
      type: integer
      required: true
      description: Numeric ID of the management department to get.
  responses:
    200:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": {
              "id": 2,
              "name": "技術開g発",
              "department_id": 134,
              "department": {
                "id": 134,
                "site_id": 131,
                "code": "DE 100",
                "long_name": "業務管理部",
                "short_name": "業務",
                "previous_name": null,
                "previous_name_flg": 1,
                "use_classification": 2
              },
              "memo": "1",
              "display_order": 1,
              "use_classification": 2,
              "created_info": {
                "date": "2024/11/25 13:33:13",
                "name": "Lê Thụy　Ngọc Hạnh"
              },
              "updated_info": {
                "date": "2024/11/27 19:07:17",
                "name": "Lê Thụy　Ngọc Hạnh"
              }
            },
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "Unauthorized.",
            "errors": null
          }
    404:
      description: Page Not Found
      schema:
        type: object
        example:
          {
            "code": 404,
            "data": null,
            "message": "ページが見つかりません。",
            "errors": "No query results for model [App\\Models\\ManagementDepartment] 1"
          }
put:
  tags:
    - Management Departments
  summary: Update management department.
  description: Update a management department
  consumes:
    - application/x-www-form-urlencoded
  produces:
    - text/html; charset=utf-8
  parameters:
    - in: path
      name: management_department
      type: integer
      required: true
      description: Numeric ID of the management department to get.
    - name: department_id
      description: Choose id in list dropdown
      in: formData
      required: false
      type: number
    - name: name
      description: Name
      in: formData
      required: true
      type: string
    - name: memo
      description: Memo
      in: formData
      required: false
      type: string
    - name: display_order
      description: Display order
      in: formData
      type: integer
      required: true
      default: 999999
    - name: use_classification
      description: Usage classification.
        * `1` - Not use
        * `2` - Use
      in: formData
      default: 2
      required: true
      type: integer
      enum: [ 1, 2 ]
  responses:
    200:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": {
              "id": 2,
              "name": "技術開g発 I",
              "department_id": 134,
              "department": {
                "id": 134,
                "site_id": 131,
                "code": "DE 100",
                "long_name": "業務管理部",
                "short_name": "業務",
                "previous_name": null,
                "previous_name_flg": 1,
                "use_classification": 2
              },
              "memo": "1",
              "display_order": 1,
              "use_classification": 2,
              "created_info": {
                "date": "2024/11/25 13:33:13",
                "name": "Lê Thụy　Ngọc Hạnh"
              },
              "updated_info": {
                "date": "2024/12/04 18:20:24",
                "name": "Nguyễn Hoàng　Nhật Thảo"
              }
            },
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "アクセスが拒否されました.",
            "errors": null
          }
    404:
      description: Page Not Found
      schema:
        type: object
        example:
          {
            "code": 404,
            "data": null,
            "message": "ページが見つかりません。",
            "errors": "No query results for model [App\\Models\\ManagementDepartment] 1"
          }
    422:
      description: Unprocessable Content
      schema:
        type: object
        example:
          {
            "code": 422,
            "data": null,
            "message": "バリデーションエラーがあります。",
            "errors": [
              {
                "field": "name",
                "message": [
                  "この管理部門名は、すでに存在します。"
                ]
              }
            ]
          }
delete:
  tags:
    - Management Departments
  summary: Delete management department.
  description: Delete a management department
  parameters:
    - in: path
      name: management_department
      type: integer
      required: true
      description: Numeric ID of the management department to get.
  responses:
    204:
      description: Success
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "アクセスが拒否されました.",
            "errors": null
          }
    404:
      description: Page Not Found
      schema:
        type: object
        example:
          {
            "code": 404,
            "data": null,
            "message": "ページが見つかりません。",
            "errors": "No query results for model [App\\Models\\ManagementDepartment] 45"
          }
