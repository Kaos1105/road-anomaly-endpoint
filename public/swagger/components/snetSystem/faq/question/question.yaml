get:
  tags:
    - FAQs
  summary: Show screen/list screens and questions
  description: Search the titles of all questions in all systems, filtering by ID to find questions specific to the current screen. If the screen is of the dashboard type, all questions in the current system will be shown.
  parameters:
    - in: query
      name: filter[search]
      type: string
      description: >
        Search by question's title
    - in: query
      name: filter[id]
      type: string
      description: >
        Filter by display id.
  responses:
    200:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": [
              {
                "id": 1,
                "system_id": 1,
                "name": "ログイン",
                "number_of_question": 5,
                "questions": [
                  {
                    "id": 1,
                    "display_id": 1,
                    "title": "はるさんハウスはどこですか",
                    "classification": "ボード"
                  },
                  {
                    "id": 2,
                    "display_id": 1,
                    "title": "Question 2",
                    "classification": "ボード"
                  },
                  {
                    "id": 3,
                    "display_id": 1,
                    "title": "Question 3",
                    "classification": "ボード"
                  },
                  {
                    "id": 4,
                    "display_id": 1,
                    "title": "Question 4",
                    "classification": "ボード"
                  },
                  {
                    "id": 11,
                    "display_id": 1,
                    "title": "ttttt",
                    "classification": "ダッシュボード"
                  }
                ]
              },
              {
                "id": 2,
                "system_id": 1,
                "name": "ダッシュボード",
                "number_of_question": 6,
                "questions": [
                  {
                    "id": 5,
                    "display_id": 2,
                    "title": "ダッシュボード",
                    "classification": "ダッシュボード"
                  },
                  {
                    "id": 6,
                    "display_id": 2,
                    "title": "Question 6",
                    "classification": "ボード"
                  },
                  {
                    "id": 7,
                    "display_id": 2,
                    "title": "Question 7",
                    "classification": "ボード"
                  },
                  {
                    "id": 8,
                    "display_id": 2,
                    "title": "Question 8",
                    "classification": "ボード"
                  },
                  {
                    "id": 9,
                    "display_id": 2,
                    "title": "Question 9",
                    "classification": "ボード"
                  },
                  {
                    "id": 10,
                    "display_id": 2,
                    "title": "Question 10",
                    "classification": "ボード"
                  }
                ]
              }
            ],
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "Unauthorized.",
            "errors": null
          }

post:
  tags:
    - FAQs
  summary: Create new question
  consumes:
    - application/x-www-form-urlencoded
  produces:
    - text/html; charset=utf-8
  parameters:
    - name: display_id
      description: Screen name id
      in: formData
      required: true
      type: integer
    - name: code
      description: question's code
      in: formData
      required: true
      type: string
    - name: classification
      description: Input or choose option in question classification dropdown
      in: formData
      required: true
      type: string
    - name: title
      description: Question's title
      in: formData
      required: true
      type: string
    - name: permission_2
      description: Content permission 2
        * `1` - DATA_VIEWING
        * `2` - TRANSACTION_EDIT
        * `3` - MASTER_EDIT
      in: formData
      required: true
      type: integer
      default: 1
    - name: permission_3
      description: Content permission 3
        * `1` - GENERAL_INFORMATION
        * `2` - CONFIDENTIAL_INFORMATION
      in: formData
      required: true
      type: integer
      default: 1
    - name: permission_4
      description: Content permission 4
        * `1` - AFFILIATED_DIVISION
        * `2` - AFFILIATED_DEPARTMENT
        * `3` - AFFILIATED_SITE
        * `4` - ENTIRE_COMPANY
      in: formData
      required: true
      type: integer
      default: 1
    - name: similar_faq_1_id
      description: Choose similar question on the similar question dropdown
      in: formData
      required: false
      type: integer
    - name: similar_faq_2_id
      description: Choose similar question on the similar question dropdown
      in: formData
      required: false
      type: integer
    - name: similar_faq_3_id
      description: Choose similar question on the similar question dropdown
      in: formData
      required: false
      type: integer
    - name: memo
      description: Memo
      in: formData
      required: false
      type: string
    - name: display_order
      description: Display order
      in: formData
      type: integer
      required: true
      default: 999999
    - name: use_classification
      description: Company usage classification
      in: formData
      default: 2
      required: true
      type: integer
  responses:
    201:
      description: Success
      schema:
        type: object
        example:
          {
            "code": 200,
            "data": {
              "id": 14,
              "display": {
                "id": 1,
                "system_id": 1,
                "system": {
                  "id": 1,
                  "code": "10000",
                  "name": "マインシステム",
                  "operation_classification": null,
                  "start_date": "2024/05/15",
                  "end_date": "2026/02/07",
                  "use_classification": 2,
                  "display_order": 999999
                },
                "code": "10001",
                "name": "ログイン",
                "use_classification": 2
              },
              "display_id": 1,
              "code": "ee",
              "classification": "すか",
              "title": "はるさんハウスはどこですか.タムです。学生です. ベトナムから来ました",
              "permission_2": 1,
              "permission_3": 2,
              "permission_4": 3,
              "similar_faq_1_id": 10,
              "similar_faq_1": {
                "id": 10,
                "code": "Q1",
                "title": "Question 10",
                "classification": "ボード"
              },
              "similar_faq_2_id": 10,
              "similar_faq_2": null,
              "similar_faq_3_id": 10,
              "similar_faq_3": null,
              "memo": null,
              "display_order": 1,
              "use_classification": 2,
              "created_info": {
                "date": "2024/11/01 16:15:34",
                "name": "Lê Thụy　Ngọc Hạnh"
              },
              "updated_info": {
                "date": "2024/11/01 16:15:34",
                "name": "Lê Thụy　Ngọc Hạnh"
              }
            },
            "message": "OK",
            "errors": null
          }
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "Unauthorized.",
            "errors": null
          }
    422:
      description: Unprocessable Content
      schema:
        type: object
        example:
          {
            "code": 422,
            "data": null,
            "message": "バリデーションエラーがあります。",
            "errors": [
              {
                "field": "code",
                "message": [
                  "CODEは必須項目です。"
                ]
              }
            ]
          }

delete:
  tags:
    - FAQs
  summary: Delete question.
  parameters:
    - in: path
      name: question
      type: integer
      required: true
      description: Numeric ID of the question to get.
  responses:
    204:
      description: Success
    401:
      description: Unauthorized
      schema:
        type: object
        example:
          {
            "code": 401,
            "data": null,
            "message": "アクセスが拒否されました",
            "errors": null
          }
    404:
      description: Page Not Found
      schema:
        type: object
        example:
          {
            "code": 404,
            "data": null,
            "message": "ページが見つかりません。",
            "errors": "No query results for model [App\\Models\\Question] 80"
          }

